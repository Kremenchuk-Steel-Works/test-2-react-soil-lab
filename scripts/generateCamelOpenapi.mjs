import { execSync } from 'child_process'
import { existsSync, mkdirSync, readFileSync, writeFileSync } from 'fs'
import path from 'path'

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ ---
const config = JSON.parse(readFileSync('./api-services.config.json', 'utf-8'))
const serviceName = process.argv[2]

if (!serviceName) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞.')
  console.log('‚úÖ –ü—Ä–∏–º–µ—Ä: npm run api main')
  process.exit(1)
}

const service = config[serviceName]

if (!service) {
  console.error(`‚ùå –û—à–∏–±–∫–∞: –°–µ—Ä–≤–∏—Å —Å –∏–º–µ–Ω–µ–º "${serviceName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ api-services.config.json.`)
  process.exit(1)
}

const { url, path: servicePath } = service

// --- –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º ---
if (!existsSync(servicePath)) {
  mkdirSync(servicePath, { recursive: true })
}

const openapiJsonPath = path.join(servicePath, 'openapi.json')
const schemaTsPath = path.join(servicePath, 'schema.ts')
const casingFilePath = 'casing.yaml'

// --- –ü—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ---
try {
  console.log(`üöÄ [${serviceName}] –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ö–µ–º—ã...`)
  execSync(`npx openapi-format ${url} -o ${openapiJsonPath} --casingFile ${casingFilePath}`, {
    stdio: 'inherit',
  })
  console.log(`\nüéâ [${serviceName}] –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª openapi.json —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.`)
} catch (error) {
  console.error(`‚ùå [${serviceName}] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ API:`, error.message)
  process.exit(1)
}
