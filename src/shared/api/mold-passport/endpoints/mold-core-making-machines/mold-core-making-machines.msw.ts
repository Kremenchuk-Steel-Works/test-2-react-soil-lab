/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Molding Shop Service
 * OpenAPI spec version: 0.1.0
 */
import { faker } from '@faker-js/faker'
import { delay, http, HttpResponse } from 'msw'
import type { MoldCoreMakingMachineLookupsListResponse } from '../../model'

export const getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetResponseMock =
  (
    overrideResponse: Partial<MoldCoreMakingMachineLookupsListResponse> = {},
  ): MoldCoreMakingMachineLookupsListResponse => ({
    data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
      () => ({
        id: faker.string.uuid(),
        brand: faker.string.alpha({ length: { min: 10, max: 20 } }),
        model: faker.string.alpha({ length: { min: 10, max: 20 } }),
      }),
    ),
    page: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
    totalPages: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
    totalItems: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
    ...overrideResponse,
  })

export const getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetMockHandler =
  (
    overrideResponse?:
      | MoldCoreMakingMachineLookupsListResponse
      | ((
          info: Parameters<Parameters<typeof http.get>[1]>[0],
        ) =>
          | Promise<MoldCoreMakingMachineLookupsListResponse>
          | MoldCoreMakingMachineLookupsListResponse),
  ) => {
    return http.get('*/api/v1/mold-core-making-machines/lookups', async (info) => {
      await delay(1000)

      return new HttpResponse(
        JSON.stringify(
          overrideResponse !== undefined
            ? typeof overrideResponse === 'function'
              ? await overrideResponse(info)
              : overrideResponse
            : getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetResponseMock(),
        ),
        { status: 200, headers: { 'Content-Type': 'application/json' } },
      )
    })
  }
export const getMoldCoreMakingMachinesMock = () => [
  getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetMockHandler(),
]
