/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Molding Shop Service
 * OpenAPI spec version: 0.1.0
 */
import {
  useQuery,
  type DataTag,
  type DefinedInitialDataOptions,
  type DefinedUseQueryResult,
  type QueryClient,
  type QueryFunction,
  type QueryKey,
  type UndefinedInitialDataOptions,
  type UseQueryOptions,
  type UseQueryResult,
} from '@tanstack/react-query'
import { customMutator } from '../../../mutator'
import type {
  GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  HttpValidationError,
  MoldCoreMakingMachineLookupsListResponse,
} from '../../model'

/**
 * @summary Get Mold Core Making Machine Lookups List
 */
export const getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet = (
  params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  signal?: AbortSignal,
) => {
  return customMutator<MoldCoreMakingMachineLookupsListResponse>({
    url: `/api/v1/mold-core-making-machines/lookups`,
    method: 'GET',
    params,
    signal,
  })
}

export const getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryKey = (
  params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
) => {
  return [`/api/v1/mold-core-making-machines/lookups`, ...(params ? [params] : [])] as const
}

export const getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryOptions =
  <
    TData = Awaited<
      ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
    >,
    TError = HttpValidationError,
  >(
    params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
    options?: {
      query?: Partial<
        UseQueryOptions<
          Awaited<
            ReturnType<
              typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
            >
          >,
          TError,
          TData
        >
      >
    },
  ) => {
    const { query: queryOptions } = options ?? {}

    const queryKey =
      queryOptions?.queryKey ??
      getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryKey(params)

    const queryFn: QueryFunction<
      Awaited<
        ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
      >
    > = ({ signal }) =>
      getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet(params, signal)

    return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
      Awaited<
        ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
      >,
      TError,
      TData
    > & { queryKey: DataTag<QueryKey, TData, TError> }
  }

export type GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryResult =
  NonNullable<
    Awaited<
      ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
    >
  >
export type GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryError =
  HttpValidationError

export function useGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet<
  TData = Awaited<
    ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
  >,
  TError = HttpValidationError,
>(
  params:
    | undefined
    | GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  options: {
    query: Partial<
      UseQueryOptions<
        Awaited<
          ReturnType<
            typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
          >
        >,
        TError,
        TData
      >
    > &
      Pick<
        DefinedInitialDataOptions<
          Awaited<
            ReturnType<
              typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
            >
          >,
          TError,
          Awaited<
            ReturnType<
              typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
            >
          >
        >,
        'initialData'
      >
  },
  queryClient?: QueryClient,
): DefinedUseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData, TError> }
export function useGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet<
  TData = Awaited<
    ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
  >,
  TError = HttpValidationError,
>(
  params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<
          ReturnType<
            typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
          >
        >,
        TError,
        TData
      >
    > &
      Pick<
        UndefinedInitialDataOptions<
          Awaited<
            ReturnType<
              typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
            >
          >,
          TError,
          Awaited<
            ReturnType<
              typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
            >
          >
        >,
        'initialData'
      >
  },
  queryClient?: QueryClient,
): UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData, TError> }
export function useGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet<
  TData = Awaited<
    ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
  >,
  TError = HttpValidationError,
>(
  params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<
          ReturnType<
            typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
          >
        >,
        TError,
        TData
      >
    >
  },
  queryClient?: QueryClient,
): UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData, TError> }
/**
 * @summary Get Mold Core Making Machine Lookups List
 */

export function useGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet<
  TData = Awaited<
    ReturnType<typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet>
  >,
  TError = HttpValidationError,
>(
  params?: GetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetParams,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<
          ReturnType<
            typeof getMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGet
          >
        >,
        TError,
        TData
      >
    >
  },
  queryClient?: QueryClient,
): UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData, TError> } {
  const queryOptions =
    getGetMoldCoreMakingMachineLookupsListApiV1MoldCoreMakingMachinesLookupsGetQueryOptions(
      params,
      options,
    )

  const query = useQuery(queryOptions, queryClient) as UseQueryResult<TData, TError> & {
    queryKey: DataTag<QueryKey, TData, TError>
  }

  query.queryKey = queryOptions.queryKey

  return query
}
