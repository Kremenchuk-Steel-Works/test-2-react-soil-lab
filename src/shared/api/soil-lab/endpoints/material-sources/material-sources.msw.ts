/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * soil_laboratory
 * OpenAPI spec version: 0.1.0
 */
import { faker } from '@faker-js/faker'
import { delay, http, HttpResponse } from 'msw'
import type { MaterialSourcePaginatedListResponse } from '../../model'

export const getGetMaterialSourceLookupsListApiV1MaterialSourcesLookupsGetResponseMock = (
  overrideResponse: Partial<MaterialSourcePaginatedListResponse> = {},
): MaterialSourcePaginatedListResponse => ({
  data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
    archivedAt: faker.helpers.arrayElement([
      faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
      undefined,
    ]),
    createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
    updatedAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
    id: faker.string.uuid(),
    code: faker.string.alpha({ length: { min: 10, max: 20 } }),
    name: faker.string.alpha({ length: { min: 10, max: 20 } }),
    isArchived: faker.datatype.boolean(),
  })),
  page: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
  totalPages: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
  totalItems: faker.number.int({ min: undefined, max: undefined, multipleOf: undefined }),
  ...overrideResponse,
})

export const getGetMaterialSourceLookupsListApiV1MaterialSourcesLookupsGetMockHandler = (
  overrideResponse?:
    | MaterialSourcePaginatedListResponse
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<MaterialSourcePaginatedListResponse> | MaterialSourcePaginatedListResponse),
) => {
  return http.get('*/api/v1/material-sources/lookups', async (info) => {
    await delay(1000)

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === 'function'
            ? await overrideResponse(info)
            : overrideResponse
          : getGetMaterialSourceLookupsListApiV1MaterialSourcesLookupsGetResponseMock(),
      ),
      { status: 200, headers: { 'Content-Type': 'application/json' } },
    )
  })
}
export const getMaterialSourcesMock = () => [
  getGetMaterialSourceLookupsListApiV1MaterialSourcesLookupsGetMockHandler(),
]
