{
  "openapi": "3.1.0",
  "info": {
    "title": "Main Service",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "operationId": "login_api_v1_auth_login_post",
        "summary": "Login User",
        "description": "Authenticate the user and issue access and refresh tokens to start a new session.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPairResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "operationId": "refresh_access_token_api_v1_auth_refresh_post",
        "summary": "Refresh Access Token",
        "description": "Use a refresh token to issue a new access token and maintain the user session.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "operationId": "logout_api_v1_auth_logout_post",
        "summary": "Logout User",
        "description": "Revoke the refresh token to log the user out and end the current session.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/cities/": {
      "get": {
        "operationId": "get_cities_list_api_v1_cities__get",
        "summary": "Get Cities List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "cities"
        ]
      },
      "post": {
        "operationId": "create_city_api_v1_cities__post",
        "summary": "Create City",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "cities"
        ]
      }
    },
    "/api/v1/cities/{city_id}": {
      "get": {
        "operationId": "get_city_api_v1_cities__city_id__get",
        "summary": "Get City",
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "City Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "cities"
        ]
      },
      "put": {
        "operationId": "update_city_api_v1_cities__city_id__put",
        "summary": "Update City",
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "City Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "cities"
        ]
      },
      "delete": {
        "operationId": "delete_city_api_v1_cities__city_id__delete",
        "summary": "Delete City",
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "City Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "cities"
        ]
      }
    },
    "/api/v1/counties/": {
      "get": {
        "operationId": "get_counties_list_api_v1_counties__get",
        "summary": "Get Counties List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "counties"
        ]
      },
      "post": {
        "operationId": "create_country_api_v1_counties__post",
        "summary": "Create Country",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "counties"
        ]
      }
    },
    "/api/v1/counties/{country_id}": {
      "get": {
        "operationId": "get_country_api_v1_counties__country_id__get",
        "summary": "Get Country",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Country Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "counties"
        ]
      },
      "put": {
        "operationId": "update_country_api_v1_counties__country_id__put",
        "summary": "Update Country",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Country Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "counties"
        ]
      },
      "delete": {
        "operationId": "delete_country_api_v1_counties__country_id__delete",
        "summary": "Delete Country",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Country Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "counties"
        ]
      }
    },
    "/api/v1/departments/": {
      "get": {
        "operationId": "get_departments_list_api_v1_departments__get",
        "summary": "Get Departments List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "departments"
        ]
      },
      "post": {
        "operationId": "create_department_api_v1_departments__post",
        "summary": "Create Department",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "departments"
        ]
      }
    },
    "/api/v1/departments/{department_id}": {
      "get": {
        "operationId": "get_department_api_v1_departments__department_id__get",
        "summary": "Get Department",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Department Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "departments"
        ]
      },
      "put": {
        "operationId": "update_department_api_v1_departments__department_id__put",
        "summary": "Update Department",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Department Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "departments"
        ]
      },
      "delete": {
        "operationId": "delete_department_api_v1_departments__department_id__delete",
        "summary": "Delete Department",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Department Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "departments"
        ]
      }
    },
    "/api/v1/lookups/cities": {
      "get": {
        "operationId": "get_cities_list_api_v1_lookups_cities_get",
        "summary": "Get Cities List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityLookupResponse"
                  },
                  "title": "Response Get Cities List Api V1 Lookups Cities Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/countries": {
      "get": {
        "operationId": "get_countries_list_api_v1_lookups_countries_get",
        "summary": "Get Countries List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryLookupResponse"
                  },
                  "title": "Response Get Countries List Api V1 Lookups Countries Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/departments": {
      "get": {
        "operationId": "get_departments_list_api_v1_lookups_departments_get",
        "summary": "Get Departments List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentLookupResponse"
                  },
                  "title": "Response Get Departments List Api V1 Lookups Departments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/organizations": {
      "get": {
        "operationId": "get_organizations_list_api_v1_lookups_organizations_get",
        "summary": "Get Organizations List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationLookupResponse"
                  },
                  "title": "Response Get Organizations List Api V1 Lookups Organizations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/people": {
      "get": {
        "operationId": "get_people_list_api_v1_lookups_people_get",
        "summary": "Get People List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonLookupResponse"
                  },
                  "title": "Response Get People List Api V1 Lookups People Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/positions": {
      "get": {
        "operationId": "get_positions_list_api_v1_lookups_positions_get",
        "summary": "Get Positions List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionLookupResponse"
                  },
                  "title": "Response Get Positions List Api V1 Lookups Positions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/permissions": {
      "get": {
        "operationId": "get_permissions_list_api_v1_lookups_permissions_get",
        "summary": "Get Permissions List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionLookupResponse"
                  },
                  "title": "Response Get Permissions List Api V1 Lookups Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/lookups/roles": {
      "get": {
        "operationId": "get_roles_list_api_v1_lookups_roles_get",
        "summary": "Get Roles List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleLookupResponse"
                  },
                  "title": "Response Get Roles List Api V1 Lookups Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "lookups"
        ]
      }
    },
    "/api/v1/organizations/": {
      "get": {
        "operationId": "get_organizations_list_api_v1_organizations__get",
        "summary": "Get Organizations List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      },
      "post": {
        "operationId": "create_organization_api_v1_organizations__post",
        "summary": "Create Organization",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/organizations/{organization_id}": {
      "get": {
        "operationId": "get_organization_api_v1_organizations__organization_id__get",
        "summary": "Get Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      },
      "put": {
        "operationId": "update_organization_api_v1_organizations__organization_id__put",
        "summary": "Update Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      },
      "delete": {
        "operationId": "delete_organization_api_v1_organizations__organization_id__delete",
        "summary": "Delete Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/api/v1/people/": {
      "get": {
        "operationId": "get_people_list_api_v1_people__get",
        "summary": "Get People List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      },
      "post": {
        "operationId": "create_person_api_v1_people__post",
        "summary": "Create Person",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      }
    },
    "/api/v1/people/{person_id}": {
      "get": {
        "operationId": "get_person_api_v1_people__person_id__get",
        "summary": "Get Person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Person Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      },
      "put": {
        "operationId": "update_person_api_v1_people__person_id__put",
        "summary": "Update Person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Person Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      },
      "delete": {
        "operationId": "delete_person_api_v1_people__person_id__delete",
        "summary": "Delete Person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Person Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      }
    },
    "/api/v1/permissions/": {
      "get": {
        "operationId": "get_permissions_list_api_v1_permissions__get",
        "summary": "Get Permissions List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "post": {
        "operationId": "create_permission_api_v1_permissions__post",
        "summary": "Create Permission",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      }
    },
    "/api/v1/permissions/{permission_id}": {
      "get": {
        "operationId": "get_permission_api_v1_permissions__permission_id__get",
        "summary": "Get Permission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "put": {
        "operationId": "update_permission_api_v1_permissions__permission_id__put",
        "summary": "Update Permission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "delete": {
        "operationId": "delete_permission_api_v1_permissions__permission_id__delete",
        "summary": "Delete Permission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      }
    },
    "/api/v1/positions/": {
      "get": {
        "operationId": "get_positions_list_api_v1_positions__get",
        "summary": "Get Positions List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "positions"
        ]
      },
      "post": {
        "operationId": "create_position_api_v1_positions__post",
        "summary": "Create Position",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "positions"
        ]
      }
    },
    "/api/v1/positions/{position_id}": {
      "get": {
        "operationId": "get_position_api_v1_positions__position_id__get",
        "summary": "Get Position",
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Position Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "positions"
        ]
      },
      "put": {
        "operationId": "update_position_api_v1_positions__position_id__put",
        "summary": "Update Position",
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Position Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "positions"
        ]
      },
      "delete": {
        "operationId": "delete_position_api_v1_positions__position_id__delete",
        "summary": "Delete Position",
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Position Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "positions"
        ]
      }
    },
    "/api/v1/roles/": {
      "get": {
        "operationId": "get_roles_list_api_v1_roles__get",
        "summary": "Get Roles List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      },
      "post": {
        "operationId": "create_role_api_v1_roles__post",
        "summary": "Create Role",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/api/v1/roles/{role_id}": {
      "get": {
        "operationId": "get_role_api_v1_roles__role_id__get",
        "summary": "Get Role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      },
      "put": {
        "operationId": "update_role_api_v1_roles__role_id__put",
        "summary": "Update Role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      },
      "delete": {
        "operationId": "delete_role_api_v1_roles__role_id__delete",
        "summary": "Delete Role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "operationId": "get_users_list_api_v1_users__get",
        "summary": "Get Users List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 20,
              "minimum": 1,
              "title": "Per Page"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "create_user_api_v1_users__post",
        "summary": "Create User",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "get_me_api_v1_users_me_get",
        "summary": "Get Me",
        "parameters": [
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "operationId": "get_user_api_v1_users__user_id__get",
        "summary": "Get User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "update_user_api_v1_users__user_id__put",
        "summary": "Update User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "summary": "Delete User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "xUserId",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Id"
            }
          },
          {
            "name": "xUserEmail",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddressCreate": {
        "description": "Schema for creating a new Address.",
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "title": "Street"
          },
          "postalCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "cityId": {
            "type": "integer",
            "title": "City Id"
          }
        },
        "required": [
          "street",
          "type",
          "isPrimary",
          "cityId"
        ],
        "title": "AddressCreate"
      },
      "AddressDetailResponse": {
        "description": "Complete response schema for Address entity.",
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "title": "Street"
          },
          "postalCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "cityId": {
            "type": "integer",
            "title": "City Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "street",
          "type",
          "isPrimary",
          "id",
          "cityId",
          "createdAt",
          "updatedAt"
        ],
        "title": "AddressDetailResponse"
      },
      "AddressOperation": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ],
            "title": "Action"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressCreate"
              },
              {
                "$ref": "#/components/schemas/AddressUpdate"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "required": [
          "action"
        ],
        "title": "AddressOperation"
      },
      "AddressResponse": {
        "description": "Response schema for Address entity.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "cityId": {
            "type": "integer",
            "title": "City Id"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          }
        },
        "required": [
          "id",
          "cityId",
          "type",
          "isPrimary"
        ],
        "title": "AddressResponse"
      },
      "AddressType": {
        "description": "Enumerates the functional purpose of an address",
        "type": "string",
        "enum": [
          "billing",
          "shipping",
          "warehouse",
          "plant",
          "office",
          "home"
        ],
        "title": "AddressType"
      },
      "AddressUpdate": {
        "description": "Schema for updating Address.",
        "type": "object",
        "properties": {
          "cityId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "City Id"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "postalCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              },
              {
                "type": "null"
              }
            ]
          },
          "isPrimary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "title": "AddressUpdate"
      },
      "CityCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "countryId": {
            "type": "integer",
            "title": "Country Id"
          }
        },
        "required": [
          "name",
          "nameLocal",
          "countryId"
        ],
        "title": "CityCreate"
      },
      "CityDetailResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "country": {
            "$ref": "#/components/schemas/CountryShortResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "name",
          "nameLocal",
          "id",
          "country",
          "createdAt",
          "updatedAt"
        ],
        "title": "CityDetailResponse"
      },
      "CityListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "CityListResponse"
      },
      "CityLookupResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "countryId": {
            "type": "integer",
            "title": "Country Id"
          }
        },
        "required": [
          "name",
          "nameLocal",
          "id",
          "countryId"
        ],
        "title": "CityLookupResponse"
      },
      "CityResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "countryId": {
            "type": "integer",
            "title": "Country Id"
          }
        },
        "required": [
          "name",
          "nameLocal",
          "id",
          "countryId"
        ],
        "title": "CityResponse"
      },
      "CityShortResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "nameLocal",
          "id"
        ],
        "title": "CityShortResponse"
      },
      "CityUpdate": {
        "type": "object",
        "properties": {
          "countryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "nameLocal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Local"
          }
        },
        "title": "CityUpdate"
      },
      "ContactCreate": {
        "description": "Schema for creating a new Contact.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "required": [
          "type",
          "value",
          "isPrimary"
        ],
        "title": "ContactCreate"
      },
      "ContactDetailResponse": {
        "description": "Complete response schema for Contact entity.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "type",
          "value",
          "isPrimary",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "ContactDetailResponse"
      },
      "ContactOperation": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ],
            "title": "Action"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactCreate"
              },
              {
                "$ref": "#/components/schemas/ContactUpdate"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "required": [
          "action"
        ],
        "title": "ContactOperation"
      },
      "ContactResponse": {
        "description": "Response schema for Contact entity.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "required": [
          "type",
          "value",
          "isPrimary",
          "id"
        ],
        "title": "ContactResponse"
      },
      "ContactType": {
        "description": "Enumerates contact methods used in the system",
        "type": "string",
        "enum": [
          "email",
          "phone",
          "telegram",
          "linkedin",
          "website"
        ],
        "title": "ContactType"
      },
      "ContactUpdate": {
        "description": "Schema for updating Contact.",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactType"
              },
              {
                "type": "null"
              }
            ]
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "isPrimary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Primary"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "title": "ContactUpdate"
      },
      "CountryCreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "code3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code3"
          },
          "numericCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Numeric Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          }
        },
        "required": [
          "code",
          "name",
          "nameLocal"
        ],
        "title": "CountryCreate"
      },
      "CountryDetailResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "code3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code3"
          },
          "numericCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Numeric Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityShortResponse"
            },
            "title": "Cities"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "code",
          "name",
          "nameLocal",
          "id",
          "cities",
          "createdAt",
          "updatedAt"
        ],
        "title": "CountryDetailResponse"
      },
      "CountryListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "CountryListResponse"
      },
      "CountryLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "nameLocal"
        ],
        "title": "CountryLookupResponse"
      },
      "CountryResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "code3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code3"
          },
          "numericCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Numeric Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "code",
          "name",
          "nameLocal",
          "id"
        ],
        "title": "CountryResponse"
      },
      "CountryShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nameLocal": {
            "type": "string",
            "title": "Name Local"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "nameLocal"
        ],
        "title": "CountryShortResponse"
      },
      "CountryUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "code3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code3"
          },
          "numericCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Numeric Code"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "nameLocal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Local"
          }
        },
        "title": "CountryUpdate"
      },
      "DepartmentCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "required": [
          "name"
        ],
        "title": "DepartmentCreate"
      },
      "DepartmentDetailResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionShortResponse"
            },
            "title": "Permissions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "name",
          "id",
          "permissions",
          "createdAt",
          "updatedAt"
        ],
        "title": "DepartmentDetailResponse"
      },
      "DepartmentListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "DepartmentListResponse"
      },
      "DepartmentLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "DepartmentLookupResponse"
      },
      "DepartmentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "DepartmentResponse"
      },
      "DepartmentShortResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "DepartmentShortResponse"
      },
      "DepartmentUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "title": "DepartmentUpdate"
      },
      "EmployeeProfileCreate": {
        "description": "Schema for creating a new EmployeeProfile.",
        "type": "object",
        "properties": {
          "employeeNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hiredAt": {
            "type": "string",
            "format": "date",
            "title": "Hired At"
          },
          "employmentStatus": {
            "$ref": "#/components/schemas/EmploymentStatus"
          }
        },
        "required": [
          "hiredAt",
          "employmentStatus"
        ],
        "title": "EmployeeProfileCreate"
      },
      "EmployeeProfileDetailResponse": {
        "description": "Complete response schema for EmployeeProfile entity.",
        "type": "object",
        "properties": {
          "employeeNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hiredAt": {
            "type": "string",
            "format": "date",
            "title": "Hired At"
          },
          "employmentStatus": {
            "$ref": "#/components/schemas/EmploymentStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "hiredAt",
          "employmentStatus",
          "createdAt",
          "updatedAt"
        ],
        "title": "EmployeeProfileDetailResponse"
      },
      "EmployeeProfileResponse": {
        "type": "object",
        "properties": {
          "employeeNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hiredAt": {
            "type": "string",
            "format": "date",
            "title": "Hired At"
          },
          "employmentStatus": {
            "$ref": "#/components/schemas/EmploymentStatus"
          }
        },
        "required": [
          "hiredAt",
          "employmentStatus"
        ],
        "title": "EmployeeProfileResponse"
      },
      "EmployeeProfileUpdate": {
        "description": "Schema for updating an existing EmployeeProfile.",
        "type": "object",
        "properties": {
          "employeeNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hiredAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hired At"
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "EmployeeProfileUpdate"
      },
      "EmploymentStatus": {
        "description": "Employment status enumeration for EmployeeProfile model",
        "type": "string",
        "enum": [
          "intern",
          "full-time",
          "part-time",
          "contract",
          "on-leave",
          "suspended",
          "terminated",
          "retired"
        ],
        "title": "EmploymentStatus"
      },
      "Gender": {
        "description": "Enumerates gender options for Person model",
        "type": "string",
        "enum": [
          "male",
          "female",
          "other"
        ],
        "title": "Gender"
      },
      "HttpValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail"
          }
        },
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "required": [
          "refreshToken"
        ],
        "title": "LogoutRequest"
      },
      "OrganizationCreate": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "taxId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id"
          },
          "countryId": {
            "type": "integer",
            "title": "Country Id"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses"
          }
        },
        "required": [
          "legalName",
          "countryId"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationDetailResponse": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "taxId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "country": {
            "$ref": "#/components/schemas/CountryShortResponse"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDetailResponse"
            },
            "title": "Contacts"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDetailResponse"
            },
            "title": "Addresses"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "legalName",
          "id",
          "country",
          "contacts",
          "addresses",
          "createdAt",
          "updatedAt"
        ],
        "title": "OrganizationDetailResponse"
      },
      "OrganizationListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "OrganizationListResponse"
      },
      "OrganizationLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "legalName": {
            "type": "string",
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          }
        },
        "required": [
          "id",
          "legalName",
          "registrationNumber"
        ],
        "title": "OrganizationLookupResponse"
      },
      "OrganizationResponse": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "taxId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "country": {
            "$ref": "#/components/schemas/CountryShortResponse"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "title": "Contacts"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "title": "Addresses"
          }
        },
        "required": [
          "legalName",
          "id",
          "country",
          "contacts",
          "addresses"
        ],
        "title": "OrganizationResponse"
      },
      "OrganizationShortResponse": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "taxId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "countryName": {
            "type": "string",
            "title": "Country Name"
          }
        },
        "required": [
          "legalName",
          "id",
          "countryName"
        ],
        "title": "OrganizationShortResponse"
      },
      "OrganizationUpdate": {
        "type": "object",
        "properties": {
          "countryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Id"
          },
          "legalName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name"
          },
          "registrationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Number"
          },
          "taxId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id"
          },
          "contactOperations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactOperation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Operations"
          },
          "addressOperations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressOperation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Operations"
          }
        },
        "title": "OrganizationUpdate"
      },
      "PermissionCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid",
            "title": "Department Id"
          }
        },
        "required": [
          "name",
          "departmentId"
        ],
        "title": "PermissionCreate"
      },
      "PermissionDetailResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department": {
            "$ref": "#/components/schemas/DepartmentShortResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "name",
          "id",
          "department",
          "createdAt",
          "updatedAt"
        ],
        "title": "PermissionDetailResponse"
      },
      "PermissionListItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentName": {
            "type": "string",
            "title": "Department Name"
          }
        },
        "required": [
          "id",
          "name",
          "departmentName"
        ],
        "title": "PermissionListItemResponse"
      },
      "PermissionListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionListItemResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "PermissionListResponse"
      },
      "PermissionLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentName": {
            "type": "string",
            "title": "Department Name"
          }
        },
        "required": [
          "id",
          "name",
          "departmentName"
        ],
        "title": "PermissionLookupResponse"
      },
      "PermissionResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department": {
            "$ref": "#/components/schemas/DepartmentShortResponse"
          }
        },
        "required": [
          "name",
          "id",
          "department"
        ],
        "title": "PermissionResponse"
      },
      "PermissionShortResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "PermissionShortResponse"
      },
      "PermissionUpdate": {
        "type": "object",
        "properties": {
          "departmentId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "title": "PermissionUpdate"
      },
      "PersonCreate": {
        "description": "Schema for creating a new Person with related entities.\n\nExtends PersonBase to include core personal information.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "title": "First Name"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "lastName": {
            "type": "string",
            "title": "Last Name"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "photoUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "employeeProfile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeProfileCreate"
              },
              {
                "type": "null"
              }
            ]
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses"
          },
          "organizationIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Ids"
          },
          "positionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position Ids"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "title": "PersonCreate"
      },
      "PersonDetailResponse": {
        "description": "Complete response schema for Person entity with all related data.\n\nUsed for detailed person information retrieval, including all relationships and metadata.\nConfigured for ORM compatibility.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "title": "First Name"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "lastName": {
            "type": "string",
            "title": "Last Name"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "photoUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "isUser": {
            "type": "boolean",
            "title": "Is User"
          },
          "employeeProfile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeProfileDetailResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDetailResponse"
            },
            "title": "Contacts"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDetailResponse"
            },
            "title": "Addresses"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationShortResponse"
            },
            "title": "Organizations"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionShortResponse"
            },
            "title": "Positions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "gender",
          "id",
          "isUser",
          "contacts",
          "addresses",
          "organizations",
          "positions",
          "createdAt",
          "updatedAt"
        ],
        "title": "PersonDetailResponse"
      },
      "PersonListItemResponse": {
        "description": "Optimized schema for Person list items in paginated responses.\n\nContains minimal essential information for list displays, reducing payload size and improving\nperformance for large datasets while providing key business information.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "fullName": {
            "type": "string",
            "title": "Full Name"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "photoUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "isUser": {
            "type": "boolean",
            "title": "Is User"
          },
          "isEmployee": {
            "type": "boolean",
            "title": "Is Employee"
          },
          "contactsCount": {
            "type": "integer",
            "title": "Contacts Count"
          },
          "addressesCount": {
            "type": "integer",
            "title": "Addresses Count"
          },
          "organizationNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Organization Names"
          },
          "positionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Position Names"
          }
        },
        "required": [
          "id",
          "fullName",
          "gender",
          "photoUrl",
          "isUser",
          "isEmployee",
          "contactsCount",
          "addressesCount",
          "organizationNames",
          "positionNames"
        ],
        "title": "PersonListItemResponse"
      },
      "PersonListResponse": {
        "description": "Paginated response container for Person list operations.\n\nExtends base list response with Person-specific list items, providing pagination metadata and\nstandardized list structure.",
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonListItemResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "PersonListResponse"
      },
      "PersonLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "fullName": {
            "type": "string",
            "title": "Full Name"
          }
        },
        "required": [
          "id",
          "fullName"
        ],
        "title": "PersonLookupResponse"
      },
      "PersonResponse": {
        "description": "Response schema for Person entity with all related data.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "fullName": {
            "type": "string",
            "title": "Full Name"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "photoUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "employeeProfile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeProfileResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "title": "Contacts"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "title": "Addresses"
          },
          "organizationNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Organization Names"
          },
          "positionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Position Names"
          }
        },
        "required": [
          "id",
          "fullName",
          "gender",
          "photoUrl",
          "contacts",
          "addresses",
          "organizationNames",
          "positionNames"
        ],
        "title": "PersonResponse"
      },
      "PersonUpdate": {
        "description": "Schema for updating Person with complex relationship operations.\n\nSupports partial updates of person data and sophisticated operations on related entities\nincluding creation, updates, and deletions. All fields are optional to support partial updates.",
        "type": "object",
        "properties": {
          "firstName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "lastName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "photoUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "employeeProfileAction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "create",
                  "update",
                  "delete"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Profile Action"
          },
          "employeeProfileData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeProfileCreate"
              },
              {
                "$ref": "#/components/schemas/EmployeeProfileUpdate"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Profile Data"
          },
          "contactOperations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactOperation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Operations"
          },
          "addressOperations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressOperation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Operations"
          },
          "organizationIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Ids"
          },
          "positionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position Ids"
          }
        },
        "title": "PersonUpdate"
      },
      "PositionCreate": {
        "description": "Schema for creating a new Position.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "required": [
          "name"
        ],
        "title": "PositionCreate"
      },
      "PositionDetailResponse": {
        "description": "Complete response schema for Position entity.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "PositionDetailResponse"
      },
      "PositionListResponse": {
        "description": "Paginated response container for Position list operations.",
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "PositionListResponse"
      },
      "PositionLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "PositionLookupResponse"
      },
      "PositionResponse": {
        "description": "Regular response schema for Position entity.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "PositionResponse"
      },
      "PositionShortResponse": {
        "description": "Short response schema for Position entity.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "PositionShortResponse"
      },
      "PositionUpdate": {
        "description": "Schema for updating an existing Position.",
        "type": "object",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "title": "PositionUpdate"
      },
      "RoleCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission Ids"
          }
        },
        "required": [
          "name"
        ],
        "title": "RoleCreate"
      },
      "RoleDetailResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionListItemResponse"
            },
            "title": "Permissions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "name",
          "id",
          "permissions",
          "createdAt",
          "updatedAt"
        ],
        "title": "RoleDetailResponse"
      },
      "RoleListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "RoleListResponse"
      },
      "RoleLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "RoleLookupResponse"
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "RoleResponse"
      },
      "RoleShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionListItemResponse"
            },
            "title": "Permissions"
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ],
        "title": "RoleShortResponse"
      },
      "RoleUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission Ids"
          }
        },
        "title": "RoleUpdate"
      },
      "TokenPairResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "title": "Access Token"
          },
          "refreshToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "tokenType": {
            "type": "string",
            "default": "bearer",
            "title": "Token Type"
          }
        },
        "required": [
          "accessToken"
        ],
        "title": "TokenPairResponse"
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "required": [
          "refreshToken"
        ],
        "title": "TokenRefreshRequest"
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "title": "Access Token"
          },
          "tokenType": {
            "type": "string",
            "default": "bearer",
            "title": "Token Type"
          }
        },
        "required": [
          "accessToken"
        ],
        "title": "TokenRefreshResponse"
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "personId": {
            "type": "string",
            "format": "uuid",
            "title": "Person Id"
          },
          "rawPassword": {
            "type": "string",
            "title": "Raw Password"
          },
          "isActive": {
            "type": "boolean",
            "default": true,
            "title": "Is Active"
          },
          "isSuperuser": {
            "type": "boolean",
            "default": false,
            "title": "Is Superuser"
          },
          "rolesIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles Ids"
          },
          "permissionsIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions Ids"
          }
        },
        "required": [
          "email",
          "personId",
          "rawPassword"
        ],
        "title": "UserCreate"
      },
      "UserDetailResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "isActive": {
            "type": "boolean",
            "title": "Is Active"
          },
          "isSuperuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "lastLoginAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "title": "Roles"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "title": "Permissions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "required": [
          "email",
          "id",
          "isActive",
          "isSuperuser",
          "roles",
          "permissions",
          "createdAt",
          "updatedAt"
        ],
        "title": "UserDetailResponse"
      },
      "UserListResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "totalPages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "totalItems": {
            "type": "integer",
            "title": "Total Items"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserShortResponse"
            },
            "title": "Data"
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "data"
        ],
        "title": "UserListResponse"
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "isActive": {
            "type": "boolean",
            "title": "Is Active"
          },
          "isSuperuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "lastLoginAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "title": "Roles"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "title": "Permissions"
          }
        },
        "required": [
          "email",
          "id",
          "isActive",
          "isSuperuser",
          "roles",
          "permissions"
        ],
        "title": "UserResponse"
      },
      "UserShortResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "fullName": {
            "type": "string",
            "title": "Full Name"
          },
          "isActive": {
            "type": "boolean",
            "title": "Is Active"
          },
          "isSuperuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "lastLoginAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Role Names"
          },
          "permissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Permission Names"
          }
        },
        "required": [
          "email",
          "id",
          "fullName",
          "isActive",
          "isSuperuser",
          "roleNames",
          "permissionNames"
        ],
        "title": "UserShortResponse"
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "isActive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "isSuperuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "rolesIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles Ids"
          },
          "permissionsIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions Ids"
          }
        },
        "title": "UserUpdate"
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}